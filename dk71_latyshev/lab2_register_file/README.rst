=============================================


Лабораторна робота №2


=============================================

Тема
------



Створення регістрового файлу ядра MIPS


Хід роботи
-------


**Специфікація.** Після ознайомлення з завданням , було сформульовано
наступні критерії до виконання:

Завданням поставлено створення регістрового файлу з розрядністю регістрів - 32 біти, кількістю
 регістрів - 32, входом асинхронного скидання та дозволу запису і входом адреси запису та данних


Створення проекту Так як у попередній лабораторній було реалізовано 32-х бітний регістр на Verilog,
 то було вирішено його брати за основу. Для регістрового файлу необхідно 32 таких регістри.
 Всі інші компоненти на схемі були взяті готові з редактора схем Quartu's.
 Тому фактично можна сказати, що схема була зроблена комбінованим методом. 
Проект складаєтья з 32 регістрів для безпосередньо зберігання даних, двох мультиплексорів для зчитування даних з регістрів та одного декодера,
 за допомогою якого відбувається запис даних до вибраного регістру.

**Схема, зроблена у схемному редакторi, була взята у Коцюбайло Антона.** За необхiдностi зможу пояснити, за принцип роботи.

Тобто основна схема  розроблена в основному графічним методом, але сам регістр був написаний на Verilog.
Також на Verilog був написаний файл для тестування.


.. image:: media/register.png
Так виглядає RTL схема цього регістрового файлу

.. image:: media/waveform.png
Так виглядає частина Waveform симуляції



Висновки
-------

В ході виконання лабараторної роботи було синтезовано та перевірено "регістровий файл", який включає в себе 2 32-розрядких порта виводу інформації,
 вхід we, асинхронне скидання arst, 1 адресна шина для вибуру регістру в який буде записано інформацію(RW), 
2 шини для вибору считувальних регістрів (RA, RB).
``waveform`` синтезованого "регістрового файлу" відповідає очікуванням.
 Написано тестбенч для зручності перевірки регістрового файлу. 

P.S. Структра звіту та запозиченi частини були підглянутi у студента групи ДК72 Волинко Назара









